user www-data;
worker_processes auto;
worker_rlimit_nofile 500000;

events {

    # essential for linux, optmized to serve many clients with each thread
    use epoll;

    worker_connections 20000;

    # Accept as many connections as possible, after nginx gets notification about a new connection.
    # May flood worker_connections, if that option is set too low.
    multi_accept on;

}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 150m;

    ##
    # Keep-Alive Settings
    ##

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    keepalive_timeout 75;
    keepalive_requests 5000;

    ##
    # Caches information about open FDs, freqently accessed files.
    ##

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    ##
    #Proxy buffer setting
    ##

    proxy_buffer_size   8k;
    proxy_buffers   8  8k;
    proxy_busy_buffers_size   16k;

    ##
    # Logging Settings
    ##
    log_format main '$proxy_protocol_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"';

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_min_length  1100;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    # Some version of IE 6 don't handle compression well on some mime-types,
    # so just disable for them
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    # Set a vary header so downstream proxies don't send cached gzipped
    # content to IE6
    gzip_vary on;
{%- if pillar['nginx-realip-from'] is defined -%}
{% for ip in nginx.nginx-realip-from %}
    set_real_ip_from {{ ip }};
{%- endfor %}
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
{%- endif %}
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}